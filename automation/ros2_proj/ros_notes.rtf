{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red49\green49\blue49;
\red35\green109\blue172;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c25153\c25153\c25090;
\cssrgb\c16478\c50686\c72999;\cssrgb\c0\c0\c0;\cssrgb\c0\c1\c1;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16600\viewh14580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 ROS\
\
always source: . ./install/setup.bash\
\
Turtle sim:\
start: ros2 run turtlesim turtlesim_node\
operate: ros2 run turtlesim turtle_teleop_key\
\
ros2 node list\
ros2 topic list\
ros2 service list\
ros2 action list\
\
rqt\
\
operate turtle 2: \
ros2 run turtlesim turtle_teleop_key --ros-args --remap turtle1/cmd_vel:=turtle2/cmd_vel\
\
\'97\'97\'97\'97\'97\'97\'97 NODES \'97\'97\'97\'97\'97\'97 \
one node per function ex controlling motor\
nodes can send and receive data by topics, services, actions or parameters\
\
ros2 run <package_name> <executable_name>\
\
remapping: ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle\
get info: ros2 node info /my_turtle\
\
\'97\'97\'97\'97\'97\'97 TOPICS \'97\'97\'97\'97\'97\'97\
\
spin: ros2 topic pub --rate 1 /turtle1/cmd_vel geometry_msgs/msg/Twist "\{linear: \{x: 2.0, y: 0.0, z: 0.0\}, angular: \{x: 0.0, y: 0.0, z: 1.8\}\}"\
\
clear lines: ros2 service call /clear std_srvs/srv/Empty\
\
spawn: ros2 service call /spawn turtlesim/srv/Spawn "\{x: 2, y: 2, theta: 0.2, name: ''\}"\
\
\
\'97\'97\'97\'97\'97\'97params\'97\'97\'97\'97\'97\'97\'97\'97\
dump: ros2 param dump /turtlesim\
load: ros2 param load /turtlesim ./turtlesim.yaml\
on startup: ros2 run turtlesim turtlesim_node --ros-args --params-file ./turtlesim.yaml\
\
\
\
create pkg from root: ros2 pkg create --build-type ament_python py_pubsub\
\
build: colcon build --packages-select py_pubsub\
\
source: . install/setup.bash\
\
run node: ros2 run py_pubsub talker\
\
\
\pard\pardeftab720\sa480\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://docs.ros.org/en/galactic/Tutorials/Writing-A-Simple-Py-Publisher-And-Subscriber.html#id10"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Summary}}{\field{\*\fldinst{HYPERLINK "https://docs.ros.org/en/galactic/Tutorials/Writing-A-Simple-Py-Publisher-And-Subscriber.html#summary"}}{\fldrslt \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 \uc0\u61633 }}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl480\sa480\partightenfactor0
\cf2 \strokec4 You created two nodes to publish and subscribe to data over a topic. Before running them, you added their dependencies and entry points to the package configuration files.\
\
window is: x: 0 -> 11 ,y: mid 5.5 , 0 -> 11\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec6 r1_to_pos1\
r1_grasp_pos1\
r1_to_home\
r2_to_pos3\
r2_grasp_pos3\
r2_to_pos1\
r2_release_pos1\
r2_to_pos2\
r2_grasp_pos2\
r2_to_pos3\
r1_to_pos2\
r1_release_pos2\
r2_release_pos3\
\
r1_to_pos1\
r1_grasp_pos1\
r2_to_pos2\
r2_grasp_pos2\
r2_to_home\
r1_to_pos2\
r1_release_pos2\
r1_to_pos3\
r1_grasp_pos3\
r1_to_pos1\
r1_release_pos1\
r2_to_pos3\
r2_release_pos3\
\pard\pardeftab720\sl480\sa480\partightenfactor0
\cf2 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \outl0\strokewidth0 r1_to_pos1\
r1_grasp_pos1\
\pard\pardeftab720\sl480\sa480\partightenfactor0
\cf2 \outl0\strokewidth0 \strokec4 \
\
}